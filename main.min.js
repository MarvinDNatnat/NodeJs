const express=require("express"),app=express(),morgan=require("morgan"),bodyParser=require("body-parser"),authentication=require("./api/routes/authentication"),accountRoutes=require("./api/routes/accounts"),swaggerUi=require("swagger-ui-express"),swaggerJSDoc=require("swagger-jsdoc"),dotenv=require("dotenv"),cookieParser=require("cookie-parser"),auth=require("./api/middleware/auth");dotenv.config(),app.use(cookieParser()),app.use(morgan("dev"));const options={definition:{openapi:"3.0.0",info:{title:"Test Api Project",version:"1.0.0"},servers:[{url:"http://localhost:"+process.env.PORT+"/"}]},apis:["./api/routes/**.js"]},SwaggerSpec=swaggerJSDoc(options);app.use("/api-docs",swaggerUi.serve,swaggerUi.setup(SwaggerSpec)),app.use(express.json()),app.use(bodyParser.urlencoded({extended:!1})),app.use(bodyParser.json()),app.use((req,res,next)=>{if(res.header("Access-Control-Allow-Origin","*"),res.header("Access-Control-Allow-Headers","Origin, X-Requested-With, Content-Type, Accept, Authorization"),"OPTIONS"===req.method)return res.header("Access-Control-Allow-Methods","PUT, POST, PATCH, DELETE, GET"),res.status(200).json({});next()}),app.use("/authenticate",authentication),app.get("/chat",(req,res)=>{res.sendFile(__dirname+"/index.html")}),app.use("/account",auth,accountRoutes),app.use((req,res,next)=>{const error=new Error("It Look likes you are looking for nothing!");error.status=404,next(error)}),app.use((error,req,res,next)=>{res.status(error.status||500),res.json({error:{message:error.message}})}),module.exports=app;